#!/bin/bash

function function_add_lib () {
    echo "pkg added: $1"
    dpkg -s $1 | grep "^Status"
    PKGS="$PKGS""PKG_SEARCH_MODULE(PKG_$1 REQUIRED $1)\n"
    PKGS_INC="$PKGS_INC""\${PKG_$1_INCLUDE_DIRS} "
    PKGS_LIBS="$PKGS_LIBS""\${PKG_$1_LIBRARIES} "
}

function function_gen_libs () {
    LIBS="
        \nINCLUDE(FindPkgConfig)
        \n
        \n$PKGS
        \nINCLUDE_DIRECTORIES( $PKGS_INC)
        \nTARGET_LINK_LIBRARIES( \${PROJECT_NAME} $PKGS_LIBS)
    "
}

# ---
# project
# ---

PROJECT_NAME=project172

function_add_lib sdl2
function_add_lib SDL2_image
function_add_lib SDL2_ttf
function_add_lib SDL2_gfx
function_add_lib SDL2_mixer
function_add_lib jsoncpp

# ---
# ---
# ---

SRC_DIRECTORY=`pwd`
BUILD_DIRECTORY="$SRC_DIRECTORY"/build-cmake-32


function function_configure() {
    echo configuring...

    function_gen_libs
    CMAKE_LISTS="
        cmake_minimum_required(VERSION 2.8)
        \n
        \noption(PROJECT_NAME \"Project name\" OFF)
        \nproject(\${PROJECT_NAME})
        \nset(CMAKE_CXX_FLAGS \"\${CMAKE_CXX_FLAGS} -std=c++11 -Wall -pthread -m32\")
        \n
        \nfile(GLOB_RECURSE CPPS \"*.cpp\")
        \n
        \nmessage(STATUS \"CMAKE_CURRENT_SOURCE_DIR: \${CMAKE_CURRENT_SOURCE_DIR}\")
        \nmessage(STATUS \"CMAKE_CURRENT_BINARY_DIR: \${CMAKE_CURRENT_BINARY_DIR}\")
        \n
        \nlist(REMOVE_ITEM CPPS \"\${CMAKE_CURRENT_BINARY_DIR}/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp\")
        \nmessage(STATUS \"CPPS: \${CPPS}\")
        \n
        \nadd_executable(\${PROJECT_NAME} \${CPPS})
        \n
        \n$LIBS
        \n
    "
  
    mkdir -p $BUILD_DIRECTORY
    echo -e $CMAKE_LISTS > $SRC_DIRECTORY/CMakeLists.txt
    cd $BUILD_DIRECTORY
    cmake $SRC_DIRECTORY -DPROJECT_NAME="$PROJECT_NAME"

    #echo -e "--- CMakeLists.txt --- uncoment ^^^^ to use"  
    #echo -e $CMAKE_LISTS
    #echo -e "--- -------------- ---"
}

function function_compile() {
    echo compiling...
    cd $BUILD_DIRECTORY
    make
}

function function_clear() {
    echo clearing...
    rm -r $BUILD_DIRECTORY
    rm $SRC_DIRECTORY/CMakeLists.txt
}

if [ "$1" == "--compile" ]; then
    function_configure
    function_compile
elif [ "$1" == "--only-compile" ]; then
    function_compile  
elif [ "$1" == "--clear" ]; then
    function_clear
elif [ "$1" == "--help" ]; then
    echo -e "\n### BURBOKOP'S COMMON CONFIGURATION SCRIPT ###\n"
    echo -e "dependencies:\n g++\n cmake\n make\n"
    echo "usage: "
    echo "    ./configure                => configure."
    echo "    ./configure --compile      => configure, then make."
    echo "    ./configure --only-compile => only run make."
    echo "    ./configure --clear        => delete build directory."
elif [ "$1" == "" ]; then
  function_configure
else
  echo -e "./configure: unknown argument\n    ./configure --help"
fi
